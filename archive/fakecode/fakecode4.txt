@setnickname.error
async def setnickame_error(ctx, error):
	await ctx.send(
	    'Sorry, your role is too high in the heirarchy so I can\'t nickname you!'
	)


@beg.error
async def beg_error(ctx, error):
	em = discord.Embed(
	    title=f"Calm it down!",
	    description=f"Sorry, this command has a 45 second cooldown")
	await ctx.send(embed=em)


@slotmachine.error
async def slotmachine_error(ctx, error):
	em = discord.Embed(
	    title=f"Calm it down!",
	    description=f"Sorry,  this command has a 20 second cooldown")
	await ctx.send(embed=em)


@rob.error
async def rob_error(ctx, error):
	em = discord.Embed(
	    title=f"Calm it down!",
	    description=f"Sorry,  this command has a 5 minute cooldown")
	await ctx.send(embed=em)


#
#
# End error functions

keepalive()
client.run(os.getenv('token'))

import discord
import os
import requests
import json
from replit import db
from keepalive import keepalive
import logging
import requests
import json
import random
import time
import asyncio
import threading
from threading import Thread
import tracemalloc
from discord.ext import commands

devquote = ['Purpose means nothing without effort, and effort means nothing without purpose -Hehebot Developer', 'You have to pass through the storm wall before you can reach the eye -Hehebot Developer', 'Aim for the highest, hit past the limits -Hehebot developer', 'Think of failure as rolling your dice, and think of success as moving your piece -Hehebot developer']

technoarray = ['Look at these nerds!', 'NERRRRRRDS', 'Random Quote - Sun Tzu', 'All part of the masta plan', 'I\'m a human GPS chat, calm down', 'No, no! Chat, stop saying techno lost!', 'Chat, why do you bully me chat? No, NO! Don\'t say technolate!']

logging.basicConfig(level=logging.INFO)

prefix = "!hehe "

client = discord.Client(activity=discord.Game(name='!hehe help'))
client = commands.Bot(command_prefix=prefix, case_insensitive=True)


def hehe_quote():
  response = requests.get("https://zenquotes.io/api/random")
  json_data = json.loads(response.text)
  quote = json_data[0]['q'] + " -" + json_data[0]['a']
  return(quote)

def hehe_foxphoto():
  response = requests.get("https://randomfox.ca/floof/?ref=apilist.fun")
  json_data = json.loads(response.text)
  fox = json_data
  return(fox)

@client.event
async def on_ready():
    print('We have logged in as {0.user}'.format(client))


@client.command(name="ping")
async def ping(ctx):
  await ctx.send(f"Pong! \n {client.latency}")



@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if message.content.startswith('!hehe hello'):
        await message.channel.send('Hello!')
    if message.content.startswith('!hehe tod help'):
        await message.channel.send('To play truth or dare, just say !hehe truth or !hehe dare. This is prefferrably played with a friend or group of people.')
    if message.content.startswith('!hehe botstory'):
        await message.channel.send('The story behind Hehebot started when I met the bot Optimum#4332. It was a bot coded by thecoolguy17#3226 and ajay.#8719. When I met thecoolguy17#3226 and realized that he coded Optimum, I recognized him as an experienced coder, something I had always aspired to be, even though I had been made lazy by using block coding. I was then inspired to build and create my own bot, using Python (Optimum was in Javascript if you were wondering). I would like to thank thecoolguy17#3226 for being a role model and giving me inspiration. Thecoolguy, if you are reading this, I have one thing to say even though I cannot express my thanks enough - tysm :). (Also sorry if u didnt want your tag used) Sincerely, Hehebot Developer. \n Link to Optimum Server: https://discord.gg/JAZQ6QWMY5 \n Link to invite Optimum: https://discord.com/oauth2/authorize?client_id=814652706143993876&scope=bot&permissions=2147483647 \n Link to Optimum Website: https://opweb.kinggajee.repl.co/ ')
    if message.content.startswith('!hehe desc'):
        await message.channel.send('I can do various things such as give you random quotes, give you a quote from my dev, play truth or dare and would you rather, load up a random image of a fox, and give you technoblade quotes. I am always improving and if you want to request any features, DM CC-5576-39#2144. My dev will be happy to help and try to implement your suggestion into me. Thanks for using me! - Hehebot ')
    if message.content.startswith('!hehe truth'):
        await message.channel.send(truth[random.randint(0,35)])
    if message.content.startswith('!hehe dare'):
        await message.channel.send(dare[random.randint(0,20)])
    if message.content.startswith('!hehe wouldyourather help'):
        await message.channel.send('To play would you rather, simply say !hehe wyr. For more commands, use !hehe help.')
    if message.content.startswith('!hehe wyr'):
        await message.channel.send(would[random.randint(0,38)])
    if message.content.startswith('!hehe stfu'):
        await message.channel.send('Geez thats not nice. (hehehehehe)')
    if message.content.startswith('!hehe fox'):
        fox = hehe_foxphoto()
        await message.channel.send(fox)
        await message.channel.send('Keep running this command to see a different fox!')
    if message.content.startswith('!hehe devquote'):
        await message.channel.send(devquote[random.randint(0,3)])
    if message.content.startswith('!hehe techno'):
        await message.channel.send(technoarray[random.randint(0,6)])
    if message.content.startswith('!hehe dankwork'):
        await message.channel.send('Reminding you you in 59 min')
        await asyncio.sleep(3540)
        await message.channel.send(message.author.mention)
        await message.channel.send('You can work again.')
    if message.content.startswith('!hehe dankvote'):
        await message.channel.send('Reminder set.')
        await asyncio.sleep(43200)
        await message.channel.send(message.author.mention + ', you can vote again.')
    if message.content.startswith('!hehe hackclient.server.changeowner(647886407062519809)'):
      await message.channel.send('Evaluating...')
      await asyncio.sleep(1)
      await message.channel.send('Expression Succesful!')
      await message.channel.send('Details: hackclient.server.changeowner(647886407062519809)\n Outcome: Successfully Transeferred server ownership to @647886407062519809')
    if message.content.startswith('!hehe monthly'):
      await message.channel.send('Setting Reminder.')
      await asyncio.sleep(2628000)
      await message.channel.send(message.author.mention + ', your monthly rewards for dank memer can be collected now.')
    if message.content.startswith('!hehe quote'):
        quote = hehe_quote()
        await message.channel.send(quote)
    if message.content.startswith('!hehe lol'):
        await message.channel.send('hehehehehehe🤣😂😆hehehehehhehehehehehe')
    if message.content.startswith('!hehe 500309'):
       await message.channel.send('Ha u tried! This command is disabled! LOL! (heheheheheheehhe hahahahahahaha u thought)')
    if message.content.startswith('!hehe help'):
        await message.author.send('Here is a list of my current commands: \n !hehe hello \n !hehe ping \n !hehe stfu \n !hehe fox \n !hehe quote \n !hehe lol\n !hehe inv/invite \n !hehe techno(technoblade) \n !hehe devquote \n !hehe wouldyourather help \n !hehe tod help \n !hehe botstory \n !hehe desc/description \n !hehe dankwork \n !hehe dankvote \n !hehe monthly')
        await message.channel.send('I have sent you a direct message with my current list of commands!')
    if message.content.startswith('!hehe inv'):
        await message.channel.send('Our server: https://discord.gg/fsATU3mbwZ Invite Link:https://discord.com/api/oauth2/authorize?client_id=839511911535214593&permissions=8&scope=bot')

keepalive()
client.run(os.getenv('TOKENNEW'))

import asyncio
import async
from discord.ext import commands
import discord

@client.command(name = 'command')
async def command(ctx):
  seconds = 0
  minutes = 0
  hours = 0
  await ctx.send('Seconds, Minutes or Hours? (s, m, or h)')
  
  def check(msg):
        return msg.author == ctx.author and msg.channel == ctx.channel and \
        msg.content.lower() in ["s", "m","h"]
  
  msg = await client.wait_for("message", check=check)
  if msg.content.lower() == "s":
      await ctx.send("How many seconds?")
  elif msg.content.lower() == "m":
      await ctx.send("How many minutes?")
  elif msg.content.lower() = "h":
      await ctx.send("How many hours?")
  else:
      await ctx.send("wow its a placeholder for some text")

  try:
      msg = await client.wait_for("message", check=check, timeout=30)
  except asyncio.TimeoutError:
      await ctx.send("Sorry, you didn't reply in time!")

from flask import Flask
from threading import Thread
app = Flask('hehebot')

@app.route('/')
def home():
    return "Hello. I am alive!"

def run():
  app.run(host='0.0.0.0', port=8090)
 
def keepalive():
    t = Thread(target=run)
    t.start()

prefix = "."

os.chdir("./mainbank")

client = commands.Bot(command_prefix=prefix, case_insensitive=True)

nicknames = [
    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
    '', '', '', '', '', ''
]


def dorito_quote():
	response = requests.get("https://zenquotes.io/api/random")
	json_data = json.loads(response.text)
	quote = json_data[0]['q'] + " -" + json_data[0]['a']
	return (quote)


@client.command(name="quote")
async def quote(ctx):
	quote = dorito_quote()
	await ctx.send(quote)


@client.command(name="dare")
async def dare(ctx):
	await ctx.send(dare[random.randint(0, 20)])


@client.command(name="truth")
async def truth(ctx):
	await ctx.send(truth[random.randint(0, 35)])


@client.command(name="wyr")
async def wyr(ctx):
	await ctx.send(would[random.randint(0, 38)])


async def open_account(user):

	users = get_bank_data()

	if str(user.id) in users:
		return False
	else:
		users[str(user.id)] = {}
		users[str(user.id)]["wallet"] = 0
		users[str(user.id)]["bank"] = 0

	with open("mainbank.json", "w") as f:
		json.dump(users, f)
	return True


@client.command(aliases=['bal'])
async def balance(ctx):
	await open_account(ctx.author)
	user = ctx.author
	users = get_bank_data()

	wallet_amt = users[str(user.id)]["wallet"]
	bank_amt = users[str(user.id)]["bank"]

	em = discord.Embed(title=f"{ctx.author.name} 's balance", )
	em.add_field(name="Wallet", value=wallet_amt)
	em.add_field(name="Bank Balance", value=bank_amt)
	await ctx.send(embed=em)


@client.command()
@commands.cooldown(1, 45, commands.BucketType.user)
async def beg(ctx):
	await open_account(ctx.author)

	users = get_bank_data()

	user = ctx.author

	earnings = random.randrange(101)

	await ctx.send(f"You got {earnings} coins!!!")

	users[str(user.id)]["wallet"] += earnings

	with open("mainbank.json", "w") as f:
		json.dump(users, f)


@client.command(aliases=['with'])
async def withdraw(ctx, amount=None):
	await open_account(ctx.author)

	if amount == None:
		await ctx.send("Please enter the amount")
		return

	bal = await update_bank(ctx.author)

	if amount == "max":
		await ctx.send("You withdrew all your coins!")
		users = get_bank_data()
		user = ctx.author
		amount = users[str(user.id)]["wallet"]
	else:
		amount = int(amount)
		if amount > bal[1]:
			await ctx.send("You Dont Have That Much Money LOL! 🤣")
			return
		if amount < 0:
			await ctx.send("Amount Must be Positive")
			return
	amount = int(amount)

	await update_bank(ctx.author, amount)
	await update_bank(ctx.author, -1 * amount, "bank")

	await ctx.send(f"You withdrew {amount} coins!")


@client.command(aliases=['dep'])
async def deposit(ctx, amount=None):
	await open_account(ctx.author)

	if amount == None:
		await ctx.send("Please enter the amount")
		return

	bal = await update_bank(ctx.author)

	amount = int(amount)
	if amount > bal[0]:
		await ctx.send("You Dont Have That Much Money LOL! 🤣")
		return
	if amount == None:
		await ctx.send("Amount Must be Positive")
		return

	await update_bank(ctx.author, -1 * amount)
	await update_bank(ctx.author, amount, "bank")

	await ctx.send(f"You Deposited {amount} coins!")


@client.command()
async def send(ctx, member: discord.Member, amount=None):
	await open_account(ctx.author)
	await open_account(member)

	if amount == None:
		await ctx.send("Please enter the amount")
		return

	bal = await update_bank(ctx.author)

	amount = int(amount)
	if amount > bal[1]:
		await ctx.send("You Dont Have That Much Money LOL! 🤣")
		return
	if amount == None:
		await ctx.send("Amount Must be Positive")
		return

	await update_bank(ctx.author, -1 * amount, "bank")
	await update_bank(member, amount, "bank")

	await ctx.send(f"You gave {amount} coins!")


@client.command(aliases=['sm'])
@commands.cooldown(1, 20, commands.BucketType.user)
async def slotmachine(ctx, amount=None):
	await open_account(ctx.author)

	if amount == None:
		await ctx.send("Please enter the amount")
		return

	bal = await update_bank(ctx.author)

	amount = int(amount)
	if amount > bal[0]:
		await ctx.send("You Dont Have That Much Money LOL! 🤣")
		return
	if amount == None:
		await ctx.send("Amount Must be Positive")
		return

	final = []
	for i in range(3):
		a = random.choice(["💰", "🎂", "🐼", "✨"])

		final.append(a)

		await ctx.send(str(final))

		if final[0] == final[1] or final[0] == final[2] or final[2] == final[1]:
			await update_bank(ctx.author, 2 * amount)
			await ctx.send("You Won!")

		else:
			await update_bank(ctx.author, -1 * amount)
			await ctx.send("You Lost Lol")


@client.command(aliases=['steal'])
@commands.cooldown(1, 300, commands.BucketType.user)
async def rob(ctx, member: discord.Member):
	await open_account(ctx.author)
	await open_account(member)

	if amount == None:
		await ctx.send("Please enter the amount")
		return

	bal = await update_bank(member)

	if bal[0] < 100:
		await ctx.send("This Man is broke LOL 🤣")
		return

	earnings = random.randrrange(0, bal[0])

	await update_bank(ctx.author, earnings)
	await update_bank(member, -1 * earnings)

	await ctx.send(f"You stole and got {amount} coins!")


#note: change json to db
#new work cmd will use db instead of json